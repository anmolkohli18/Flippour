// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Flippour renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#f1f1f1",
      "flex": 1,
      "height": 1334,
    }
  }
  virtual={undefined}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        pointerEvents="auto"
        style={
          Object {
            "backgroundColor": "white",
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#f1f1f1",
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "opacity": 0,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#2b1c19",
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "justifyContent": "center",
                    },
                    Object {
                      "backgroundColor": "#f1f1f1",
                    },
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "white",
                        "fontSize": 48,
                        "textAlign": "center",
                      },
                      Object {
                        "color": "#000",
                      },
                    ]
                  }
                >
                  FLIPPOUR
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "height": 50,
                      },
                      undefined,
                    ]
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    accessibilityComponentType={undefined}
                    accessibilityLabel={undefined}
                    accessibilityTraits={undefined}
                    accessible={true}
                    hitSlop={undefined}
                    isTVSelectable={true}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "backgroundColor": "#0a3869",
                        "borderRadius": 1000,
                        "marginBottom": 15,
                        "minWidth": 200,
                        "opacity": 1,
                        "paddingBottom": 10,
                        "paddingLeft": 10,
                        "paddingRight": 10,
                        "paddingTop": 10,
                      }
                    }
                    testID={undefined}
                    tvParallaxProperties={undefined}
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "white",
                            "fontSize": 20,
                            "textAlign": "center",
                          },
                          Object {
                            "color": "#fff",
                          },
                        ]
                      }
                    >
                      PLAY
                    </Text>
                  </View>
                  <View
                    accessibilityComponentType={undefined}
                    accessibilityLabel={undefined}
                    accessibilityTraits={undefined}
                    accessible={true}
                    hitSlop={undefined}
                    isTVSelectable={true}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "backgroundColor": "#0a3869",
                        "borderRadius": 1000,
                        "marginBottom": 15,
                        "minWidth": 200,
                        "opacity": 1,
                        "paddingBottom": 10,
                        "paddingLeft": 10,
                        "paddingRight": 10,
                        "paddingTop": 10,
                      }
                    }
                    testID={undefined}
                    tvParallaxProperties={undefined}
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "white",
                            "fontSize": 20,
                            "textAlign": "center",
                          },
                          Object {
                            "color": "#fff",
                          },
                        ]
                      }
                    >
                      YOUR RECENT
                    </Text>
                  </View>
                  <View
                    accessibilityComponentType={undefined}
                    accessibilityLabel={undefined}
                    accessibilityTraits={undefined}
                    accessible={true}
                    hitSlop={undefined}
                    isTVSelectable={true}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "backgroundColor": "#0a3869",
                        "borderRadius": 1000,
                        "marginBottom": 15,
                        "minWidth": 200,
                        "opacity": 1,
                        "paddingBottom": 10,
                        "paddingLeft": 10,
                        "paddingRight": 10,
                        "paddingTop": 10,
                      }
                    }
                    testID={undefined}
                    tvParallaxProperties={undefined}
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "white",
                            "fontSize": 20,
                            "textAlign": "center",
                          },
                          Object {
                            "color": "#fff",
                          },
                        ]
                      }
                    >
                      HIGH SCORES
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "opacity": 0,
        "position": "absolute",
        "top": 0,
        "transform": Array [
          Object {
            "translateY": -50,
          },
        ],
        "width": 750,
        "zIndex": 99,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#e3e3e3",
          "paddingBottom": 10,
          "paddingTop": 22,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
            "textAlign": "center",
          }
        }
        virtual={undefined}
      >
        No message has been entered
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "height": 1334,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 1334,
          },
        ],
        "width": 750,
      }
    }
  />
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-start",
          "margin": 20,
        }
      }
    >
      <View
        danger={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0,0,0,0.8)",
            "borderRadius": 5,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "minHeight": 50,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          }
        }
        success={false}
        virtual={undefined}
        warning={false}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#fff",
              "fontFamily": "System",
              "fontSize": 16,
            }
          }
          virtual={undefined}
        />
      </View>
    </View>
  </Modal>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "height": NaN,
            "opacity": 1,
            "padding": 15,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#757575",
              "fontFamily": "System",
              "fontSize": 16,
            }
          }
          virtual={undefined}
        />
        <RCTScrollView
          dataArray={Array []}
          dataSource={
            ListViewDataSource {
              "items": 0,
            }
          }
          enableEmptySections={true}
          renderRow={[Function]}
          renderScrollComponent={[Function]}
          style={
            Object {
              "marginHorizontal": -15,
              "marginTop": 15,
            }
          }
          virtual={undefined}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
</View>
`;
